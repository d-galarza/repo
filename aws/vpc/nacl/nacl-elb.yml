---
AWSTemplateFormatVersion: '2010-09-09'
Description: NACL with AWS CloudFormation

Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  SubnetIda:
    Type: AWS::EC2::Subnet::Id
  SubnetIdb:
    Type: AWS::EC2::Subnet::Id
  Name:
    Type: String
    Default: 'NACL_US_VA'
  Tier:
    Type: String
    Default: 'ELB'
    AllowedValues:
      - WWW
      - Data
      - ELB
  Env: 
    Type: String
    Default: prod
    AllowedValues:
      - dev
      - qa
      - uat
      - prod
Resources:
  MyNetworkACL:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Name, !Ref Tier, !Ref Env]]
  InboundHTTPRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 100
      PortRange:
        From: 80
        To: 80
  
  InboundHTTPSRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 101
      PortRange:
        From: 443
        To: 443
  
  InboundAllRule1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 10.0.0.0/8
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 110
      
  InboundAllRule2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 172.16.0.0/12
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 111
      
  InboundAllRule3:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 192.168.0.0/16
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 112

  InboundRDPRule1:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 10.0.0.0/8
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 300
      PortRange:
        From: 3389
        To: 3389

  InboundRDPRule2:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 172.16.0.0/12
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 301
      PortRange:
        From: 3389
        To: 3389

  InboundRDPRule3:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 172.16.0.0/12
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 302
      PortRange:
        From: 3389
        To: 3389

  InboundTCPRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 500
      PortRange:
        From: 1024
        To: 65535

  InboundUDPRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 17
      RuleAction: allow
      RuleNumber: 600
      PortRange:
        From: 1024
        To: 65535
  
  InboundTCPRule123:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 6
      RuleAction: allow
      RuleNumber: 501
      PortRange:
        From: 123
        To: 123

  InboundUDPRule123:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 17
      RuleAction: allow
      RuleNumber: 601
      PortRange:
        From: 123
        To: 123

  InboundICMPRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: false
      NetworkAclId: !Ref MyNetworkACL
      Protocol: 1
      RuleAction: allow
      RuleNumber: 800
      Icmp:
        Code: -1
        Type: -1
      
  OutboundAllRule:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      CidrBlock: 0.0.0.0/0
      Egress: true
      NetworkAclId: !Ref MyNetworkACL
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  
  MySubnet1NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetIda
      NetworkAclId: !Ref MyNetworkACL

  MySubnet2NetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref SubnetIdb
      NetworkAclId: !Ref MyNetworkACL